/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

module \$paramod\nbitadder\n=1 (S, Co, A, B, Cin);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  input A;
  input B;
  wire [1:0] Ci;
  input Cin;
  output Co;
  output S;
  NOT _20_ (
    .A(_10_),
    .Y(_12_)
  );
  NOT _21_ (
    .A(_00_),
    .Y(_14_)
  );
  NOT _22_ (
    .A(_01_),
    .Y(_15_)
  );
  NAND _23_ (
    .A(_15_),
    .B(_14_),
    .Y(_16_)
  );
  NAND _24_ (
    .A(_01_),
    .B(_00_),
    .Y(_02_)
  );
  NAND _25_ (
    .A(_02_),
    .B(_16_),
    .Y(_03_)
  );
  NOR _26_ (
    .A(_03_),
    .B(_12_),
    .Y(_04_)
  );
  NOR _27_ (
    .A(_01_),
    .B(_00_),
    .Y(_05_)
  );
  NOR _28_ (
    .A(_15_),
    .B(_14_),
    .Y(_06_)
  );
  NOR _29_ (
    .A(_06_),
    .B(_05_),
    .Y(_07_)
  );
  NOR _30_ (
    .A(_07_),
    .B(_10_),
    .Y(_08_)
  );
  NOR _31_ (
    .A(_08_),
    .B(_04_),
    .Y(_11_)
  );
  NAND _32_ (
    .A(_07_),
    .B(_10_),
    .Y(_09_)
  );
  NAND _33_ (
    .A(_09_),
    .B(_02_),
    .Y(_13_)
  );
  assign Ci = { Co, Cin };
  assign _00_ = A;
  assign _01_ = Cin;
  assign _10_ = B;
  assign S = _11_;
  assign Co = _13_;
endmodule

module \$paramod\n_bit_adder\n=2 (S, Co, A, B, Cin);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  input [1:0] A;
  input [1:0] B;
  wire [2:0] Ci;
  input Cin;
  output Co;
  output [1:0] S;
  NOT _40_ (
    .A(_24_),
    .Y(_32_)
  );
  NOT _41_ (
    .A(_00_),
    .Y(_03_)
  );
  NOT _42_ (
    .A(_01_),
    .Y(_05_)
  );
  NAND _43_ (
    .A(_05_),
    .B(_03_),
    .Y(_06_)
  );
  NAND _44_ (
    .A(_01_),
    .B(_00_),
    .Y(_07_)
  );
  NAND _45_ (
    .A(_07_),
    .B(_06_),
    .Y(_09_)
  );
  NOR _46_ (
    .A(_09_),
    .B(_32_),
    .Y(_10_)
  );
  NOR _47_ (
    .A(_01_),
    .B(_00_),
    .Y(_11_)
  );
  NOR _48_ (
    .A(_05_),
    .B(_03_),
    .Y(_12_)
  );
  NOR _49_ (
    .A(_12_),
    .B(_11_),
    .Y(_13_)
  );
  NOR _50_ (
    .A(_13_),
    .B(_24_),
    .Y(_14_)
  );
  NOR _51_ (
    .A(_14_),
    .B(_10_),
    .Y(_30_)
  );
  NOT _52_ (
    .A(_02_),
    .Y(_15_)
  );
  NOT _53_ (
    .A(_31_),
    .Y(_16_)
  );
  NOR _54_ (
    .A(_10_),
    .B(_12_),
    .Y(_17_)
  );
  NAND _55_ (
    .A(_17_),
    .B(_16_),
    .Y(_18_)
  );
  NAND _56_ (
    .A(_13_),
    .B(_24_),
    .Y(_19_)
  );
  NAND _57_ (
    .A(_19_),
    .B(_07_),
    .Y(_20_)
  );
  NAND _58_ (
    .A(_20_),
    .B(_31_),
    .Y(_21_)
  );
  NAND _59_ (
    .A(_21_),
    .B(_18_),
    .Y(_22_)
  );
  NOR _60_ (
    .A(_22_),
    .B(_15_),
    .Y(_23_)
  );
  NOR _61_ (
    .A(_20_),
    .B(_31_),
    .Y(_25_)
  );
  NOR _62_ (
    .A(_17_),
    .B(_16_),
    .Y(_26_)
  );
  NOR _63_ (
    .A(_26_),
    .B(_25_),
    .Y(_27_)
  );
  NOR _64_ (
    .A(_27_),
    .B(_02_),
    .Y(_28_)
  );
  NOR _65_ (
    .A(_28_),
    .B(_23_),
    .Y(_04_)
  );
  NAND _66_ (
    .A(_27_),
    .B(_02_),
    .Y(_29_)
  );
  NAND _67_ (
    .A(_29_),
    .B(_21_),
    .Y(_08_)
  );
  assign { Ci[2], Ci[0] } = { Co, Cin };
  assign _00_ = A[0];
  assign _01_ = Cin;
  assign _24_ = B[0];
  assign S[0] = _30_;
  assign _31_ = A[1];
  assign _02_ = B[1];
  assign S[1] = _04_;
  assign Co = _08_;
endmodule

module \$paramod\n_bit_adder\n=3 (S, Co, A, B, Cin);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  input [2:0] A;
  input [2:0] B;
  wire [3:0] Ci;
  input Cin;
  output Co;
  output [2:0] S;
  NOT _060_ (
    .A(_025_),
    .Y(_004_)
  );
  NAND _061_ (
    .A(_001_),
    .B(_000_),
    .Y(_005_)
  );
  NOT _062_ (
    .A(_000_),
    .Y(_006_)
  );
  NOT _063_ (
    .A(_001_),
    .Y(_008_)
  );
  NAND _064_ (
    .A(_008_),
    .B(_006_),
    .Y(_009_)
  );
  NAND _065_ (
    .A(_009_),
    .B(_005_),
    .Y(_011_)
  );
  NOR _066_ (
    .A(_011_),
    .B(_004_),
    .Y(_013_)
  );
  NOR _067_ (
    .A(_008_),
    .B(_006_),
    .Y(_014_)
  );
  NOR _068_ (
    .A(_001_),
    .B(_000_),
    .Y(_015_)
  );
  NOR _069_ (
    .A(_015_),
    .B(_014_),
    .Y(_017_)
  );
  NOR _070_ (
    .A(_017_),
    .B(_025_),
    .Y(_018_)
  );
  NOR _071_ (
    .A(_018_),
    .B(_013_),
    .Y(_035_)
  );
  NOT _072_ (
    .A(_002_),
    .Y(_019_)
  );
  NOT _073_ (
    .A(_046_),
    .Y(_020_)
  );
  NOR _074_ (
    .A(_013_),
    .B(_014_),
    .Y(_021_)
  );
  NAND _075_ (
    .A(_021_),
    .B(_020_),
    .Y(_022_)
  );
  NAND _076_ (
    .A(_017_),
    .B(_025_),
    .Y(_023_)
  );
  NAND _077_ (
    .A(_023_),
    .B(_005_),
    .Y(_024_)
  );
  NAND _078_ (
    .A(_024_),
    .B(_046_),
    .Y(_026_)
  );
  NAND _079_ (
    .A(_026_),
    .B(_022_),
    .Y(_027_)
  );
  NOR _080_ (
    .A(_027_),
    .B(_019_),
    .Y(_028_)
  );
  NOR _081_ (
    .A(_024_),
    .B(_046_),
    .Y(_029_)
  );
  NOR _082_ (
    .A(_021_),
    .B(_020_),
    .Y(_030_)
  );
  NOR _083_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NOR _084_ (
    .A(_031_),
    .B(_002_),
    .Y(_032_)
  );
  NOR _085_ (
    .A(_032_),
    .B(_028_),
    .Y(_003_)
  );
  NOT _086_ (
    .A(_010_),
    .Y(_033_)
  );
  NAND _087_ (
    .A(_031_),
    .B(_002_),
    .Y(_034_)
  );
  NAND _088_ (
    .A(_034_),
    .B(_026_),
    .Y(_036_)
  );
  NAND _089_ (
    .A(_036_),
    .B(_007_),
    .Y(_037_)
  );
  NOT _090_ (
    .A(_007_),
    .Y(_038_)
  );
  NOR _091_ (
    .A(_028_),
    .B(_030_),
    .Y(_039_)
  );
  NAND _092_ (
    .A(_039_),
    .B(_038_),
    .Y(_040_)
  );
  NAND _093_ (
    .A(_040_),
    .B(_037_),
    .Y(_041_)
  );
  NOR _094_ (
    .A(_041_),
    .B(_033_),
    .Y(_042_)
  );
  NOR _095_ (
    .A(_039_),
    .B(_038_),
    .Y(_043_)
  );
  NOR _096_ (
    .A(_036_),
    .B(_007_),
    .Y(_044_)
  );
  NOR _097_ (
    .A(_044_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _098_ (
    .A(_045_),
    .B(_010_),
    .Y(_047_)
  );
  NOR _099_ (
    .A(_047_),
    .B(_042_),
    .Y(_012_)
  );
  NAND _100_ (
    .A(_045_),
    .B(_010_),
    .Y(_048_)
  );
  NAND _101_ (
    .A(_048_),
    .B(_037_),
    .Y(_016_)
  );
  assign { Ci[3], Ci[0] } = { Co, Cin };
  assign _000_ = A[0];
  assign _001_ = Cin;
  assign _025_ = B[0];
  assign S[0] = _035_;
  assign _046_ = A[1];
  assign _002_ = B[1];
  assign S[1] = _003_;
  assign _007_ = A[2];
  assign _010_ = B[2];
  assign S[2] = _012_;
  assign Co = _016_;
endmodule

module \$paramod\n_bit_adder\n=4 (S, Co, A, B, Cin);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  input [3:0] A;
  input [3:0] B;
  wire [4:0] Ci;
  input Cin;
  output Co;
  output [3:0] S;
  NOT _080_ (
    .A(_064_),
    .Y(_003_)
  );
  NOT _081_ (
    .A(_024_),
    .Y(_005_)
  );
  NOT _082_ (
    .A(_000_),
    .Y(_007_)
  );
  NOT _083_ (
    .A(_012_),
    .Y(_008_)
  );
  NOT _084_ (
    .A(_014_),
    .Y(_009_)
  );
  NOR _085_ (
    .A(_009_),
    .B(_008_),
    .Y(_011_)
  );
  NOT _086_ (
    .A(_017_),
    .Y(_013_)
  );
  NAND _087_ (
    .A(_014_),
    .B(_012_),
    .Y(_015_)
  );
  NAND _088_ (
    .A(_009_),
    .B(_008_),
    .Y(_016_)
  );
  NAND _089_ (
    .A(_016_),
    .B(_015_),
    .Y(_018_)
  );
  NOR _090_ (
    .A(_018_),
    .B(_013_),
    .Y(_020_)
  );
  NOR _091_ (
    .A(_020_),
    .B(_011_),
    .Y(_021_)
  );
  NOR _092_ (
    .A(_021_),
    .B(_007_),
    .Y(_023_)
  );
  NOT _093_ (
    .A(_047_),
    .Y(_025_)
  );
  NOR _094_ (
    .A(_014_),
    .B(_012_),
    .Y(_026_)
  );
  NOR _095_ (
    .A(_026_),
    .B(_011_),
    .Y(_027_)
  );
  NAND _096_ (
    .A(_027_),
    .B(_017_),
    .Y(_028_)
  );
  NAND _097_ (
    .A(_028_),
    .B(_015_),
    .Y(_029_)
  );
  NAND _098_ (
    .A(_029_),
    .B(_000_),
    .Y(_030_)
  );
  NAND _099_ (
    .A(_021_),
    .B(_007_),
    .Y(_031_)
  );
  NAND _100_ (
    .A(_031_),
    .B(_030_),
    .Y(_032_)
  );
  NOR _101_ (
    .A(_032_),
    .B(_025_),
    .Y(_033_)
  );
  NOR _102_ (
    .A(_033_),
    .B(_023_),
    .Y(_034_)
  );
  NAND _103_ (
    .A(_034_),
    .B(_005_),
    .Y(_035_)
  );
  NOR _104_ (
    .A(_029_),
    .B(_000_),
    .Y(_036_)
  );
  NOR _105_ (
    .A(_036_),
    .B(_023_),
    .Y(_037_)
  );
  NAND _106_ (
    .A(_037_),
    .B(_047_),
    .Y(_038_)
  );
  NAND _107_ (
    .A(_038_),
    .B(_030_),
    .Y(_039_)
  );
  NAND _108_ (
    .A(_039_),
    .B(_024_),
    .Y(_040_)
  );
  NAND _109_ (
    .A(_040_),
    .B(_035_),
    .Y(_041_)
  );
  NOR _110_ (
    .A(_041_),
    .B(_003_),
    .Y(_042_)
  );
  NOR _111_ (
    .A(_039_),
    .B(_024_),
    .Y(_043_)
  );
  NOR _112_ (
    .A(_034_),
    .B(_005_),
    .Y(_044_)
  );
  NOR _113_ (
    .A(_044_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _114_ (
    .A(_045_),
    .B(_064_),
    .Y(_046_)
  );
  NOR _115_ (
    .A(_046_),
    .B(_042_),
    .Y(_001_)
  );
  NOT _116_ (
    .A(_004_),
    .Y(_048_)
  );
  NAND _117_ (
    .A(_045_),
    .B(_064_),
    .Y(_049_)
  );
  NAND _118_ (
    .A(_049_),
    .B(_040_),
    .Y(_050_)
  );
  NAND _119_ (
    .A(_050_),
    .B(_002_),
    .Y(_051_)
  );
  NOT _120_ (
    .A(_002_),
    .Y(_052_)
  );
  NOR _121_ (
    .A(_042_),
    .B(_044_),
    .Y(_053_)
  );
  NAND _122_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NAND _123_ (
    .A(_054_),
    .B(_051_),
    .Y(_055_)
  );
  NOR _124_ (
    .A(_055_),
    .B(_048_),
    .Y(_056_)
  );
  NOR _125_ (
    .A(_053_),
    .B(_052_),
    .Y(_057_)
  );
  NOR _126_ (
    .A(_050_),
    .B(_002_),
    .Y(_058_)
  );
  NOR _127_ (
    .A(_058_),
    .B(_057_),
    .Y(_059_)
  );
  NOR _128_ (
    .A(_059_),
    .B(_004_),
    .Y(_060_)
  );
  NOR _129_ (
    .A(_060_),
    .B(_056_),
    .Y(_006_)
  );
  NAND _130_ (
    .A(_059_),
    .B(_004_),
    .Y(_061_)
  );
  NAND _131_ (
    .A(_061_),
    .B(_051_),
    .Y(_010_)
  );
  NOR _132_ (
    .A(_027_),
    .B(_017_),
    .Y(_062_)
  );
  NOR _133_ (
    .A(_062_),
    .B(_020_),
    .Y(_019_)
  );
  NOR _134_ (
    .A(_037_),
    .B(_047_),
    .Y(_063_)
  );
  NOR _135_ (
    .A(_063_),
    .B(_033_),
    .Y(_022_)
  );
  assign { Ci[4], Ci[0] } = { Co, Cin };
  assign _000_ = A[1];
  assign _047_ = B[1];
  assign _064_ = B[2];
  assign S[2] = _001_;
  assign _002_ = A[3];
  assign _004_ = B[3];
  assign S[3] = _006_;
  assign Co = _010_;
  assign _012_ = A[0];
  assign _014_ = Cin;
  assign _017_ = B[0];
  assign S[0] = _019_;
  assign S[1] = _022_;
  assign _024_ = A[2];
endmodule

module \$paramod\n_bit_adder\n=5 (S, Co, A, B, Cin);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  input [4:0] A;
  input [4:0] B;
  wire [5:0] Ci;
  input Cin;
  output Co;
  output [4:0] S;
  NOT _100_ (
    .A(_040_),
    .Y(_026_)
  );
  NAND _101_ (
    .A(_020_),
    .B(_019_),
    .Y(_027_)
  );
  NOT _102_ (
    .A(_019_),
    .Y(_028_)
  );
  NOT _103_ (
    .A(_020_),
    .Y(_029_)
  );
  NAND _104_ (
    .A(_029_),
    .B(_028_),
    .Y(_030_)
  );
  NAND _105_ (
    .A(_030_),
    .B(_027_),
    .Y(_031_)
  );
  NOR _106_ (
    .A(_031_),
    .B(_026_),
    .Y(_033_)
  );
  NOR _107_ (
    .A(_029_),
    .B(_028_),
    .Y(_035_)
  );
  NOR _108_ (
    .A(_020_),
    .B(_019_),
    .Y(_036_)
  );
  NOR _109_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  NOR _110_ (
    .A(_037_),
    .B(_040_),
    .Y(_038_)
  );
  NOR _111_ (
    .A(_038_),
    .B(_033_),
    .Y(_054_)
  );
  NOT _112_ (
    .A(_099_),
    .Y(_041_)
  );
  NAND _113_ (
    .A(_037_),
    .B(_040_),
    .Y(_043_)
  );
  NAND _114_ (
    .A(_043_),
    .B(_027_),
    .Y(_045_)
  );
  NAND _115_ (
    .A(_045_),
    .B(_083_),
    .Y(_046_)
  );
  NOT _116_ (
    .A(_083_),
    .Y(_047_)
  );
  NOR _117_ (
    .A(_033_),
    .B(_035_),
    .Y(_049_)
  );
  NAND _118_ (
    .A(_049_),
    .B(_047_),
    .Y(_050_)
  );
  NAND _119_ (
    .A(_050_),
    .B(_046_),
    .Y(_051_)
  );
  NOR _120_ (
    .A(_051_),
    .B(_041_),
    .Y(_052_)
  );
  NOR _121_ (
    .A(_049_),
    .B(_047_),
    .Y(_053_)
  );
  NOR _122_ (
    .A(_045_),
    .B(_083_),
    .Y(_055_)
  );
  NOR _123_ (
    .A(_055_),
    .B(_053_),
    .Y(_056_)
  );
  NOR _124_ (
    .A(_056_),
    .B(_099_),
    .Y(_057_)
  );
  NOR _125_ (
    .A(_057_),
    .B(_052_),
    .Y(_021_)
  );
  NOT _126_ (
    .A(_023_),
    .Y(_058_)
  );
  NAND _127_ (
    .A(_056_),
    .B(_099_),
    .Y(_059_)
  );
  NAND _128_ (
    .A(_059_),
    .B(_046_),
    .Y(_060_)
  );
  NAND _129_ (
    .A(_060_),
    .B(_022_),
    .Y(_061_)
  );
  NOT _130_ (
    .A(_022_),
    .Y(_062_)
  );
  NOR _131_ (
    .A(_052_),
    .B(_053_),
    .Y(_063_)
  );
  NAND _132_ (
    .A(_063_),
    .B(_062_),
    .Y(_064_)
  );
  NAND _133_ (
    .A(_064_),
    .B(_061_),
    .Y(_065_)
  );
  NOR _134_ (
    .A(_065_),
    .B(_058_),
    .Y(_066_)
  );
  NOR _135_ (
    .A(_063_),
    .B(_062_),
    .Y(_067_)
  );
  NOR _136_ (
    .A(_060_),
    .B(_022_),
    .Y(_068_)
  );
  NOR _137_ (
    .A(_068_),
    .B(_067_),
    .Y(_069_)
  );
  NOR _138_ (
    .A(_069_),
    .B(_023_),
    .Y(_070_)
  );
  NOR _139_ (
    .A(_070_),
    .B(_066_),
    .Y(_024_)
  );
  NOT _140_ (
    .A(_032_),
    .Y(_071_)
  );
  NOT _141_ (
    .A(_025_),
    .Y(_072_)
  );
  NOR _142_ (
    .A(_066_),
    .B(_067_),
    .Y(_073_)
  );
  NAND _143_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NAND _144_ (
    .A(_069_),
    .B(_023_),
    .Y(_075_)
  );
  NAND _145_ (
    .A(_075_),
    .B(_061_),
    .Y(_076_)
  );
  NAND _146_ (
    .A(_076_),
    .B(_025_),
    .Y(_077_)
  );
  NAND _147_ (
    .A(_077_),
    .B(_074_),
    .Y(_078_)
  );
  NOR _148_ (
    .A(_078_),
    .B(_071_),
    .Y(_079_)
  );
  NOR _149_ (
    .A(_076_),
    .B(_025_),
    .Y(_080_)
  );
  NOR _150_ (
    .A(_073_),
    .B(_072_),
    .Y(_081_)
  );
  NOR _151_ (
    .A(_081_),
    .B(_080_),
    .Y(_082_)
  );
  NOR _152_ (
    .A(_082_),
    .B(_032_),
    .Y(_084_)
  );
  NOR _153_ (
    .A(_084_),
    .B(_079_),
    .Y(_034_)
  );
  NOT _154_ (
    .A(_042_),
    .Y(_085_)
  );
  NAND _155_ (
    .A(_082_),
    .B(_032_),
    .Y(_086_)
  );
  NAND _156_ (
    .A(_086_),
    .B(_077_),
    .Y(_087_)
  );
  NAND _157_ (
    .A(_087_),
    .B(_039_),
    .Y(_088_)
  );
  NOT _158_ (
    .A(_039_),
    .Y(_089_)
  );
  NOR _159_ (
    .A(_079_),
    .B(_081_),
    .Y(_090_)
  );
  NAND _160_ (
    .A(_090_),
    .B(_089_),
    .Y(_091_)
  );
  NAND _161_ (
    .A(_091_),
    .B(_088_),
    .Y(_092_)
  );
  NOR _162_ (
    .A(_092_),
    .B(_085_),
    .Y(_093_)
  );
  NOR _163_ (
    .A(_090_),
    .B(_089_),
    .Y(_094_)
  );
  NOR _164_ (
    .A(_087_),
    .B(_039_),
    .Y(_095_)
  );
  NOR _165_ (
    .A(_095_),
    .B(_094_),
    .Y(_096_)
  );
  NOR _166_ (
    .A(_096_),
    .B(_042_),
    .Y(_097_)
  );
  NOR _167_ (
    .A(_097_),
    .B(_093_),
    .Y(_044_)
  );
  NAND _168_ (
    .A(_096_),
    .B(_042_),
    .Y(_098_)
  );
  NAND _169_ (
    .A(_098_),
    .B(_088_),
    .Y(_048_)
  );
  assign { Ci[5], Ci[0] } = { Co, Cin };
  assign _019_ = A[0];
  assign _020_ = Cin;
  assign _040_ = B[0];
  assign S[0] = _054_;
  assign _083_ = A[1];
  assign _099_ = B[1];
  assign S[1] = _021_;
  assign _022_ = A[2];
  assign _023_ = B[2];
  assign S[2] = _024_;
  assign _025_ = A[3];
  assign _032_ = B[3];
  assign S[3] = _034_;
  assign _039_ = A[4];
  assign _042_ = B[4];
  assign S[4] = _044_;
  assign Co = _048_;
endmodule

module \$paramod\n_bit_adder\n=6 (S, Co, A, B, Cin);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  input [5:0] A;
  input [5:0] B;
  wire [6:0] Ci;
  input Cin;
  output Co;
  output [5:0] S;
  NOT _120_ (
    .A(_045_),
    .Y(_033_)
  );
  NAND _121_ (
    .A(_024_),
    .B(_023_),
    .Y(_034_)
  );
  NOT _122_ (
    .A(_023_),
    .Y(_036_)
  );
  NOT _123_ (
    .A(_024_),
    .Y(_038_)
  );
  NAND _124_ (
    .A(_038_),
    .B(_036_),
    .Y(_040_)
  );
  NAND _125_ (
    .A(_040_),
    .B(_034_),
    .Y(_041_)
  );
  NOR _126_ (
    .A(_041_),
    .B(_033_),
    .Y(_042_)
  );
  NOR _127_ (
    .A(_038_),
    .B(_036_),
    .Y(_043_)
  );
  NOR _128_ (
    .A(_024_),
    .B(_023_),
    .Y(_044_)
  );
  NOR _129_ (
    .A(_044_),
    .B(_043_),
    .Y(_046_)
  );
  NOR _130_ (
    .A(_046_),
    .B(_045_),
    .Y(_048_)
  );
  NOR _131_ (
    .A(_048_),
    .B(_042_),
    .Y(_060_)
  );
  NOT _132_ (
    .A(_109_),
    .Y(_050_)
  );
  NAND _133_ (
    .A(_046_),
    .B(_045_),
    .Y(_051_)
  );
  NAND _134_ (
    .A(_051_),
    .B(_034_),
    .Y(_052_)
  );
  NAND _135_ (
    .A(_052_),
    .B(_090_),
    .Y(_054_)
  );
  NOT _136_ (
    .A(_090_),
    .Y(_055_)
  );
  NOR _137_ (
    .A(_042_),
    .B(_043_),
    .Y(_057_)
  );
  NAND _138_ (
    .A(_057_),
    .B(_055_),
    .Y(_059_)
  );
  NAND _139_ (
    .A(_059_),
    .B(_054_),
    .Y(_061_)
  );
  NOR _140_ (
    .A(_061_),
    .B(_050_),
    .Y(_062_)
  );
  NOR _141_ (
    .A(_057_),
    .B(_055_),
    .Y(_064_)
  );
  NOR _142_ (
    .A(_052_),
    .B(_090_),
    .Y(_065_)
  );
  NOR _143_ (
    .A(_065_),
    .B(_064_),
    .Y(_066_)
  );
  NOR _144_ (
    .A(_066_),
    .B(_109_),
    .Y(_067_)
  );
  NOR _145_ (
    .A(_067_),
    .B(_062_),
    .Y(_025_)
  );
  NOT _146_ (
    .A(_030_),
    .Y(_068_)
  );
  NAND _147_ (
    .A(_066_),
    .B(_109_),
    .Y(_069_)
  );
  NAND _148_ (
    .A(_069_),
    .B(_054_),
    .Y(_070_)
  );
  NAND _149_ (
    .A(_070_),
    .B(_029_),
    .Y(_071_)
  );
  NOT _150_ (
    .A(_029_),
    .Y(_072_)
  );
  NOR _151_ (
    .A(_062_),
    .B(_064_),
    .Y(_073_)
  );
  NAND _152_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NAND _153_ (
    .A(_074_),
    .B(_071_),
    .Y(_075_)
  );
  NOR _154_ (
    .A(_075_),
    .B(_068_),
    .Y(_076_)
  );
  NOR _155_ (
    .A(_073_),
    .B(_072_),
    .Y(_077_)
  );
  NOR _156_ (
    .A(_070_),
    .B(_029_),
    .Y(_078_)
  );
  NOR _157_ (
    .A(_078_),
    .B(_077_),
    .Y(_079_)
  );
  NOR _158_ (
    .A(_079_),
    .B(_030_),
    .Y(_080_)
  );
  NOR _159_ (
    .A(_080_),
    .B(_076_),
    .Y(_031_)
  );
  NOT _160_ (
    .A(_035_),
    .Y(_081_)
  );
  NAND _161_ (
    .A(_079_),
    .B(_030_),
    .Y(_082_)
  );
  NAND _162_ (
    .A(_082_),
    .B(_071_),
    .Y(_083_)
  );
  NAND _163_ (
    .A(_083_),
    .B(_032_),
    .Y(_084_)
  );
  NOT _164_ (
    .A(_032_),
    .Y(_085_)
  );
  NOR _165_ (
    .A(_076_),
    .B(_077_),
    .Y(_086_)
  );
  NAND _166_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NAND _167_ (
    .A(_087_),
    .B(_084_),
    .Y(_088_)
  );
  NOR _168_ (
    .A(_088_),
    .B(_081_),
    .Y(_089_)
  );
  NOR _169_ (
    .A(_086_),
    .B(_085_),
    .Y(_091_)
  );
  NOR _170_ (
    .A(_083_),
    .B(_032_),
    .Y(_092_)
  );
  NOR _171_ (
    .A(_092_),
    .B(_091_),
    .Y(_093_)
  );
  NOR _172_ (
    .A(_093_),
    .B(_035_),
    .Y(_094_)
  );
  NOR _173_ (
    .A(_094_),
    .B(_089_),
    .Y(_037_)
  );
  NOT _174_ (
    .A(_047_),
    .Y(_095_)
  );
  NOT _175_ (
    .A(_039_),
    .Y(_096_)
  );
  NOR _176_ (
    .A(_089_),
    .B(_091_),
    .Y(_097_)
  );
  NAND _177_ (
    .A(_097_),
    .B(_096_),
    .Y(_098_)
  );
  NAND _178_ (
    .A(_093_),
    .B(_035_),
    .Y(_099_)
  );
  NAND _179_ (
    .A(_099_),
    .B(_084_),
    .Y(_100_)
  );
  NAND _180_ (
    .A(_100_),
    .B(_039_),
    .Y(_101_)
  );
  NAND _181_ (
    .A(_101_),
    .B(_098_),
    .Y(_102_)
  );
  NOR _182_ (
    .A(_102_),
    .B(_095_),
    .Y(_103_)
  );
  NOR _183_ (
    .A(_100_),
    .B(_039_),
    .Y(_104_)
  );
  NOR _184_ (
    .A(_097_),
    .B(_096_),
    .Y(_105_)
  );
  NOR _185_ (
    .A(_105_),
    .B(_104_),
    .Y(_106_)
  );
  NOR _186_ (
    .A(_106_),
    .B(_047_),
    .Y(_107_)
  );
  NOR _187_ (
    .A(_107_),
    .B(_103_),
    .Y(_049_)
  );
  NOT _188_ (
    .A(_056_),
    .Y(_108_)
  );
  NAND _189_ (
    .A(_106_),
    .B(_047_),
    .Y(_110_)
  );
  NAND _190_ (
    .A(_110_),
    .B(_101_),
    .Y(_111_)
  );
  NAND _191_ (
    .A(_111_),
    .B(_053_),
    .Y(_112_)
  );
  NOT _192_ (
    .A(_053_),
    .Y(_113_)
  );
  NOR _193_ (
    .A(_103_),
    .B(_105_),
    .Y(_114_)
  );
  NAND _194_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  NAND _195_ (
    .A(_115_),
    .B(_112_),
    .Y(_116_)
  );
  NOR _196_ (
    .A(_116_),
    .B(_108_),
    .Y(_117_)
  );
  NOR _197_ (
    .A(_114_),
    .B(_113_),
    .Y(_118_)
  );
  NOR _198_ (
    .A(_111_),
    .B(_053_),
    .Y(_119_)
  );
  NOR _199_ (
    .A(_119_),
    .B(_118_),
    .Y(_026_)
  );
  NOR _200_ (
    .A(_026_),
    .B(_056_),
    .Y(_027_)
  );
  NOR _201_ (
    .A(_027_),
    .B(_117_),
    .Y(_058_)
  );
  NAND _202_ (
    .A(_026_),
    .B(_056_),
    .Y(_028_)
  );
  NAND _203_ (
    .A(_028_),
    .B(_112_),
    .Y(_063_)
  );
  assign { Ci[6], Ci[0] } = { Co, Cin };
  assign _023_ = A[0];
  assign _024_ = Cin;
  assign _045_ = B[0];
  assign S[0] = _060_;
  assign _090_ = A[1];
  assign _109_ = B[1];
  assign S[1] = _025_;
  assign _029_ = A[2];
  assign _030_ = B[2];
  assign S[2] = _031_;
  assign _032_ = A[3];
  assign _035_ = B[3];
  assign S[3] = _037_;
  assign _039_ = A[4];
  assign _047_ = B[4];
  assign S[4] = _049_;
  assign _053_ = A[5];
  assign _056_ = B[5];
  assign S[5] = _058_;
  assign Co = _063_;
endmodule

module top(out, in);
  wire \c[10] ;
  wire \c[11] ;
  wire \c[12] ;
  wire \c[13] ;
  wire \c[14] ;
  wire \c[15] ;
  wire \c[16] ;
  wire \c[17] ;
  wire \c[18] ;
  wire \c[19] ;
  wire \c[1] ;
  wire \c[20] ;
  wire \c[21] ;
  wire \c[22] ;
  wire \c[23] ;
  wire \c[24] ;
  wire \c[25] ;
  wire \c[26] ;
  wire \c[27] ;
  wire \c[28] ;
  wire \c[29] ;
  wire \c[2] ;
  wire \c[30] ;
  wire \c[31] ;
  wire \c[32] ;
  wire \c[33] ;
  wire \c[34] ;
  wire \c[35] ;
  wire \c[36] ;
  wire \c[37] ;
  wire \c[38] ;
  wire \c[39] ;
  wire \c[3] ;
  wire \c[40] ;
  wire \c[41] ;
  wire \c[42] ;
  wire \c[43] ;
  wire \c[44] ;
  wire \c[45] ;
  wire \c[46] ;
  wire \c[47] ;
  wire \c[48] ;
  wire \c[49] ;
  wire \c[4] ;
  wire \c[50] ;
  wire \c[51] ;
  wire \c[52] ;
  wire \c[53] ;
  wire \c[54] ;
  wire \c[55] ;
  wire \c[56] ;
  wire \c[57] ;
  wire \c[58] ;
  wire \c[59] ;
  wire \c[5] ;
  wire \c[60] ;
  wire \c[61] ;
  wire \c[62] ;
  wire \c[63] ;
  wire \c[6] ;
  wire \c[7] ;
  wire \c[8] ;
  wire \c[9] ;
  input [0:126] in;
  output [6:0] out;
  wire [2:0] \w[10] ;
  wire [2:0] \w[11] ;
  wire [5:0] \w[12] ;
  wire [2:0] \w[13] ;
  wire [5:0] \w[14] ;
  wire [5:0] \w[15] ;
  wire [5:0] \w[16] ;
  wire [5:0] \w[17] ;
  wire [5:0] \w[18] ;
  wire [5:0] \w[19] ;
  wire [5:0] \w[1] ;
  wire [5:0] \w[20] ;
  wire [5:0] \w[21] ;
  wire [5:0] \w[22] ;
  wire [5:0] \w[23] ;
  wire [5:0] \w[24] ;
  wire [5:0] \w[25] ;
  wire [5:0] \w[26] ;
  wire [5:0] \w[27] ;
  wire [5:0] \w[28] ;
  wire [5:0] \w[29] ;
  wire [4:0] \w[2] ;
  wire [5:0] \w[30] ;
  wire [5:0] \w[31] ;
  wire [5:0] \w[32] ;
  wire [5:0] \w[33] ;
  wire [5:0] \w[34] ;
  wire [5:0] \w[35] ;
  wire [5:0] \w[36] ;
  wire [5:0] \w[37] ;
  wire [5:0] \w[38] ;
  wire [5:0] \w[39] ;
  wire [4:0] \w[3] ;
  wire [5:0] \w[40] ;
  wire [5:0] \w[41] ;
  wire [5:0] \w[42] ;
  wire [5:0] \w[43] ;
  wire [5:0] \w[44] ;
  wire [5:0] \w[45] ;
  wire [5:0] \w[46] ;
  wire [5:0] \w[47] ;
  wire [5:0] \w[48] ;
  wire [5:0] \w[49] ;
  wire [3:0] \w[4] ;
  wire [5:0] \w[50] ;
  wire [5:0] \w[51] ;
  wire [5:0] \w[52] ;
  wire [5:0] \w[53] ;
  wire [5:0] \w[54] ;
  wire [5:0] \w[55] ;
  wire [5:0] \w[56] ;
  wire [5:0] \w[57] ;
  wire [5:0] \w[58] ;
  wire [5:0] \w[59] ;
  wire [5:0] \w[5] ;
  wire [5:0] \w[60] ;
  wire [5:0] \w[61] ;
  wire [5:0] \w[62] ;
  wire [5:0] \w[63] ;
  wire [5:0] \w[6] ;
  wire [5:0] \w[7] ;
  wire [5:0] \w[8] ;
  wire [5:0] \w[9] ;
  \$paramod\n_bit_adder\n=6  \$genblock$top.v:19$10[0].$genblock$top.v:20$11[1].nbitadder  (
    .A({ \c[2] , \w[2]  }),
    .B({ \c[3] , \w[3]  }),
    .Cin(in[0]),
    .Co(\c[1] ),
    .S(\w[1] )
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$140[32].nbitadder  (
    .A(in[63]),
    .B(in[64]),
    .Cin(in[31]),
    .Co(\c[32] ),
    .S(\w[32] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$142[33].nbitadder  (
    .A(in[65]),
    .B(in[66]),
    .Cin(in[32]),
    .Co(\c[33] ),
    .S(\w[33] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$144[34].nbitadder  (
    .A(in[67]),
    .B(in[68]),
    .Cin(in[33]),
    .Co(\c[34] ),
    .S(\w[34] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$146[35].nbitadder  (
    .A(in[69]),
    .B(in[70]),
    .Cin(in[34]),
    .Co(\c[35] ),
    .S(\w[35] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$148[36].nbitadder  (
    .A(in[71]),
    .B(in[72]),
    .Cin(in[35]),
    .Co(\c[36] ),
    .S(\w[36] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$150[37].nbitadder  (
    .A(in[73]),
    .B(in[74]),
    .Cin(in[36]),
    .Co(\c[37] ),
    .S(\w[37] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$152[38].nbitadder  (
    .A(in[75]),
    .B(in[76]),
    .Cin(in[37]),
    .Co(\c[38] ),
    .S(\w[38] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$154[39].nbitadder  (
    .A(in[77]),
    .B(in[78]),
    .Cin(in[38]),
    .Co(\c[39] ),
    .S(\w[39] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$156[40].nbitadder  (
    .A(in[79]),
    .B(in[80]),
    .Cin(in[39]),
    .Co(\c[40] ),
    .S(\w[40] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$158[41].nbitadder  (
    .A(in[81]),
    .B(in[82]),
    .Cin(in[40]),
    .Co(\c[41] ),
    .S(\w[41] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$160[42].nbitadder  (
    .A(in[83]),
    .B(in[84]),
    .Cin(in[41]),
    .Co(\c[42] ),
    .S(\w[42] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$162[43].nbitadder  (
    .A(in[85]),
    .B(in[86]),
    .Cin(in[42]),
    .Co(\c[43] ),
    .S(\w[43] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$164[44].nbitadder  (
    .A(in[87]),
    .B(in[88]),
    .Cin(in[43]),
    .Co(\c[44] ),
    .S(\w[44] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$166[45].nbitadder  (
    .A(in[89]),
    .B(in[90]),
    .Cin(in[44]),
    .Co(\c[45] ),
    .S(\w[45] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$168[46].nbitadder  (
    .A(in[91]),
    .B(in[92]),
    .Cin(in[45]),
    .Co(\c[46] ),
    .S(\w[46] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$170[47].nbitadder  (
    .A(in[93]),
    .B(in[94]),
    .Cin(in[46]),
    .Co(\c[47] ),
    .S(\w[47] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$172[48].nbitadder  (
    .A(in[95]),
    .B(in[96]),
    .Cin(in[47]),
    .Co(\c[48] ),
    .S(\w[48] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$174[49].nbitadder  (
    .A(in[97]),
    .B(in[98]),
    .Cin(in[48]),
    .Co(\c[49] ),
    .S(\w[49] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$176[50].nbitadder  (
    .A(in[99]),
    .B(in[100]),
    .Cin(in[49]),
    .Co(\c[50] ),
    .S(\w[50] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$178[51].nbitadder  (
    .A(in[101]),
    .B(in[102]),
    .Cin(in[50]),
    .Co(\c[51] ),
    .S(\w[51] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$180[52].nbitadder  (
    .A(in[103]),
    .B(in[104]),
    .Cin(in[51]),
    .Co(\c[52] ),
    .S(\w[52] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$182[53].nbitadder  (
    .A(in[105]),
    .B(in[106]),
    .Cin(in[52]),
    .Co(\c[53] ),
    .S(\w[53] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$184[54].nbitadder  (
    .A(in[107]),
    .B(in[108]),
    .Cin(in[53]),
    .Co(\c[54] ),
    .S(\w[54] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$186[55].nbitadder  (
    .A(in[109]),
    .B(in[110]),
    .Cin(in[54]),
    .Co(\c[55] ),
    .S(\w[55] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$188[56].nbitadder  (
    .A(in[111]),
    .B(in[112]),
    .Cin(in[55]),
    .Co(\c[56] ),
    .S(\w[56] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$190[57].nbitadder  (
    .A(in[113]),
    .B(in[114]),
    .Cin(in[56]),
    .Co(\c[57] ),
    .S(\w[57] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$192[58].nbitadder  (
    .A(in[115]),
    .B(in[116]),
    .Cin(in[57]),
    .Co(\c[58] ),
    .S(\w[58] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$194[59].nbitadder  (
    .A(in[117]),
    .B(in[118]),
    .Cin(in[58]),
    .Co(\c[59] ),
    .S(\w[59] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$196[60].nbitadder  (
    .A(in[119]),
    .B(in[120]),
    .Cin(in[59]),
    .Co(\c[60] ),
    .S(\w[60] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$198[61].nbitadder  (
    .A(in[121]),
    .B(in[122]),
    .Cin(in[60]),
    .Co(\c[61] ),
    .S(\w[61] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$200[62].nbitadder  (
    .A(in[123]),
    .B(in[124]),
    .Cin(in[61]),
    .Co(\c[62] ),
    .S(\w[62] [0])
  );
  \$paramod\n_bit_adder\n=1  \$genblock$top.v:19$139[5].$genblock$top.v:20$202[63].nbitadder  (
    .A(in[125]),
    .B(in[126]),
    .Cin(in[62]),
    .Co(\c[63] ),
    .S(\w[63] [0])
  );
  \$paramod\n_bit_adder\n=5  \$genblock$top.v:19$15[1].$genblock$top.v:20$16[2].nbitadder  (
    .A({ \c[4] , \w[4]  }),
    .B({ \c[5] , \w[5] [3:0] }),
    .Cin(in[1]),
    .Co(\c[2] ),
    .S(\w[2] )
  );
  \$paramod\n_bit_adder\n=5  \$genblock$top.v:19$15[1].$genblock$top.v:20$20[3].nbitadder  (
    .A({ \c[6] , \w[6] [3:0] }),
    .B({ \c[7] , \w[7] [3:0] }),
    .Cin(in[2]),
    .Co(\c[3] ),
    .S(\w[3] )
  );
  \$paramod\n_bit_adder\n=4  \$genblock$top.v:19$24[2].$genblock$top.v:20$25[4].nbitadder  (
    .A({ \c[8] , \w[8] [2:0] }),
    .B({ \c[9] , \w[9] [2:0] }),
    .Cin(in[3]),
    .Co(\c[4] ),
    .S(\w[4] )
  );
  \$paramod\n_bit_adder\n=4  \$genblock$top.v:19$24[2].$genblock$top.v:20$29[5].nbitadder  (
    .A({ \c[10] , \w[10]  }),
    .B({ \c[11] , \w[11]  }),
    .Cin(in[4]),
    .Co(\c[5] ),
    .S(\w[5] [3:0])
  );
  \$paramod\n_bit_adder\n=4  \$genblock$top.v:19$24[2].$genblock$top.v:20$33[6].nbitadder  (
    .A({ \c[12] , \w[12] [2:0] }),
    .B({ \c[13] , \w[13]  }),
    .Cin(in[5]),
    .Co(\c[6] ),
    .S(\w[6] [3:0])
  );
  \$paramod\n_bit_adder\n=4  \$genblock$top.v:19$24[2].$genblock$top.v:20$37[7].nbitadder  (
    .A({ \c[14] , \w[14] [2:0] }),
    .B({ \c[15] , \w[15] [2:0] }),
    .Cin(in[6]),
    .Co(\c[7] ),
    .S(\w[7] [3:0])
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$42[8].nbitadder  (
    .A({ \c[16] , \w[16] [1:0] }),
    .B({ \c[17] , \w[17] [1:0] }),
    .Cin(in[7]),
    .Co(\c[8] ),
    .S(\w[8] [2:0])
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$46[9].nbitadder  (
    .A({ \c[18] , \w[18] [1:0] }),
    .B({ \c[19] , \w[19] [1:0] }),
    .Cin(in[8]),
    .Co(\c[9] ),
    .S(\w[9] [2:0])
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$50[10].nbitadder  (
    .A({ \c[20] , \w[20] [1:0] }),
    .B({ \c[21] , \w[21] [1:0] }),
    .Cin(in[9]),
    .Co(\c[10] ),
    .S(\w[10] )
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$54[11].nbitadder  (
    .A({ \c[22] , \w[22] [1:0] }),
    .B({ \c[23] , \w[23] [1:0] }),
    .Cin(in[10]),
    .Co(\c[11] ),
    .S(\w[11] )
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$58[12].nbitadder  (
    .A({ \c[24] , \w[24] [1:0] }),
    .B({ \c[25] , \w[25] [1:0] }),
    .Cin(in[11]),
    .Co(\c[12] ),
    .S(\w[12] [2:0])
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$62[13].nbitadder  (
    .A({ \c[26] , \w[26] [1:0] }),
    .B({ \c[27] , \w[27] [1:0] }),
    .Cin(in[12]),
    .Co(\c[13] ),
    .S(\w[13] )
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$66[14].nbitadder  (
    .A({ \c[28] , \w[28] [1:0] }),
    .B({ \c[29] , \w[29] [1:0] }),
    .Cin(in[13]),
    .Co(\c[14] ),
    .S(\w[14] [2:0])
  );
  \$paramod\n_bit_adder\n=3  \$genblock$top.v:19$41[3].$genblock$top.v:20$70[15].nbitadder  (
    .A({ \c[30] , \w[30] [1:0] }),
    .B({ \c[31] , \w[31] [1:0] }),
    .Cin(in[14]),
    .Co(\c[15] ),
    .S(\w[15] [2:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$103[23].nbitadder  (
    .A({ \c[46] , \w[46] [0] }),
    .B({ \c[47] , \w[47] [0] }),
    .Cin(in[22]),
    .Co(\c[23] ),
    .S(\w[23] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$107[24].nbitadder  (
    .A({ \c[48] , \w[48] [0] }),
    .B({ \c[49] , \w[49] [0] }),
    .Cin(in[23]),
    .Co(\c[24] ),
    .S(\w[24] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$111[25].nbitadder  (
    .A({ \c[50] , \w[50] [0] }),
    .B({ \c[51] , \w[51] [0] }),
    .Cin(in[24]),
    .Co(\c[25] ),
    .S(\w[25] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$115[26].nbitadder  (
    .A({ \c[52] , \w[52] [0] }),
    .B({ \c[53] , \w[53] [0] }),
    .Cin(in[25]),
    .Co(\c[26] ),
    .S(\w[26] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$119[27].nbitadder  (
    .A({ \c[54] , \w[54] [0] }),
    .B({ \c[55] , \w[55] [0] }),
    .Cin(in[26]),
    .Co(\c[27] ),
    .S(\w[27] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$123[28].nbitadder  (
    .A({ \c[56] , \w[56] [0] }),
    .B({ \c[57] , \w[57] [0] }),
    .Cin(in[27]),
    .Co(\c[28] ),
    .S(\w[28] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$127[29].nbitadder  (
    .A({ \c[58] , \w[58] [0] }),
    .B({ \c[59] , \w[59] [0] }),
    .Cin(in[28]),
    .Co(\c[29] ),
    .S(\w[29] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$131[30].nbitadder  (
    .A({ \c[60] , \w[60] [0] }),
    .B({ \c[61] , \w[61] [0] }),
    .Cin(in[29]),
    .Co(\c[30] ),
    .S(\w[30] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$135[31].nbitadder  (
    .A({ \c[62] , \w[62] [0] }),
    .B({ \c[63] , \w[63] [0] }),
    .Cin(in[30]),
    .Co(\c[31] ),
    .S(\w[31] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$75[16].nbitadder  (
    .A({ \c[32] , \w[32] [0] }),
    .B({ \c[33] , \w[33] [0] }),
    .Cin(in[15]),
    .Co(\c[16] ),
    .S(\w[16] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$79[17].nbitadder  (
    .A({ \c[34] , \w[34] [0] }),
    .B({ \c[35] , \w[35] [0] }),
    .Cin(in[16]),
    .Co(\c[17] ),
    .S(\w[17] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$83[18].nbitadder  (
    .A({ \c[36] , \w[36] [0] }),
    .B({ \c[37] , \w[37] [0] }),
    .Cin(in[17]),
    .Co(\c[18] ),
    .S(\w[18] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$87[19].nbitadder  (
    .A({ \c[38] , \w[38] [0] }),
    .B({ \c[39] , \w[39] [0] }),
    .Cin(in[18]),
    .Co(\c[19] ),
    .S(\w[19] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$91[20].nbitadder  (
    .A({ \c[40] , \w[40] [0] }),
    .B({ \c[41] , \w[41] [0] }),
    .Cin(in[19]),
    .Co(\c[20] ),
    .S(\w[20] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$95[21].nbitadder  (
    .A({ \c[42] , \w[42] [0] }),
    .B({ \c[43] , \w[43] [0] }),
    .Cin(in[20]),
    .Co(\c[21] ),
    .S(\w[21] [1:0])
  );
  \$paramod\n_bit_adder\n=2  \$genblock$top.v:19$74[4].$genblock$top.v:20$99[22].nbitadder  (
    .A({ \c[44] , \w[44] [0] }),
    .B({ \c[45] , \w[45] [0] }),
    .Cin(in[21]),
    .Co(\c[22] ),
    .S(\w[22] [1:0])
  );
  assign out = { \c[1] , \w[1]  };
  assign \w[12] [5:3] = 3'bxxx;
  assign \w[14] [5:3] = 3'bxxx;
  assign \w[15] [5:3] = 3'bxxx;
  assign \w[16] [5:2] = 4'bxxxx;
  assign \w[17] [5:2] = 4'bxxxx;
  assign \w[18] [5:2] = 4'bxxxx;
  assign \w[19] [5:2] = 4'bxxxx;
  assign \w[20] [5:2] = 4'bxxxx;
  assign \w[21] [5:2] = 4'bxxxx;
  assign \w[22] [5:2] = 4'bxxxx;
  assign \w[23] [5:2] = 4'bxxxx;
  assign \w[24] [5:2] = 4'bxxxx;
  assign \w[25] [5:2] = 4'bxxxx;
  assign \w[26] [5:2] = 4'bxxxx;
  assign \w[27] [5:2] = 4'bxxxx;
  assign \w[28] [5:2] = 4'bxxxx;
  assign \w[29] [5:2] = 4'bxxxx;
  assign \w[30] [5:2] = 4'bxxxx;
  assign \w[31] [5:2] = 4'bxxxx;
  assign \w[32] [5:1] = 5'bxxxxx;
  assign \w[33] [5:1] = 5'bxxxxx;
  assign \w[34] [5:1] = 5'bxxxxx;
  assign \w[35] [5:1] = 5'bxxxxx;
  assign \w[36] [5:1] = 5'bxxxxx;
  assign \w[37] [5:1] = 5'bxxxxx;
  assign \w[38] [5:1] = 5'bxxxxx;
  assign \w[39] [5:1] = 5'bxxxxx;
  assign \w[40] [5:1] = 5'bxxxxx;
  assign \w[41] [5:1] = 5'bxxxxx;
  assign \w[42] [5:1] = 5'bxxxxx;
  assign \w[43] [5:1] = 5'bxxxxx;
  assign \w[44] [5:1] = 5'bxxxxx;
  assign \w[45] [5:1] = 5'bxxxxx;
  assign \w[46] [5:1] = 5'bxxxxx;
  assign \w[47] [5:1] = 5'bxxxxx;
  assign \w[48] [5:1] = 5'bxxxxx;
  assign \w[49] [5:1] = 5'bxxxxx;
  assign \w[50] [5:1] = 5'bxxxxx;
  assign \w[51] [5:1] = 5'bxxxxx;
  assign \w[52] [5:1] = 5'bxxxxx;
  assign \w[53] [5:1] = 5'bxxxxx;
  assign \w[54] [5:1] = 5'bxxxxx;
  assign \w[55] [5:1] = 5'bxxxxx;
  assign \w[56] [5:1] = 5'bxxxxx;
  assign \w[57] [5:1] = 5'bxxxxx;
  assign \w[58] [5:1] = 5'bxxxxx;
  assign \w[59] [5:1] = 5'bxxxxx;
  assign \w[5] [5:4] = 2'bxx;
  assign \w[60] [5:1] = 5'bxxxxx;
  assign \w[61] [5:1] = 5'bxxxxx;
  assign \w[62] [5:1] = 5'bxxxxx;
  assign \w[63] [5:1] = 5'bxxxxx;
  assign \w[6] [5:4] = 2'bxx;
  assign \w[7] [5:4] = 2'bxx;
  assign \w[8] [5:3] = 3'bxxx;
  assign \w[9] [5:3] = 3'bxxx;
endmodule
